// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

// declare the data source
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// define your user model 
// (id:mongodb id, blogs: Blog[], Commenprismats: Comments[]) 
model User {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  username String  @unique
  email    String  @unique
  password String?
  location String?
  blogs    Blog[]
  Comments Comments[]
  LikedBlog LikedBlog[]
}

// define blog model
// (id:mongodb id, userId: User mongodb id, user: User, Comments: Comments[])
model Blog {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  label       String
  Description String
  userId      String?     @db.ObjectId // still user id
  user        User?       @relation(fields: [userId], references: [id])
  likes       Int        @default(0)
  views       Int        @default(0)
  Comments    Comments[]
  LikedBlog LikedBlog[]
  updatedAt   DateTime   @updatedAt
  createdAt   DateTime   @default(now())
}

// cretaing comments model
// (id:mongodb id, userId: User mongodb id, blogId: Blog mongodb id, user: User, blog: Blog)
model Comments {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  description String
  userId String @db.ObjectId
  blogId String @db.ObjectId
  vulgar Boolean @default(false)
  user   User   @relation(fields: [userId], references: [id])
  blog   Blog   @relation(fields: [blogId], references: [id])
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model LikedBlog {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  blog      Blog     @relation(fields: [blogId], references: [id])
  userId    String   @db.ObjectId
  blogId    String   @db.ObjectId
  createdAt DateTime @default(now())

  @@unique([userId, blogId])
}